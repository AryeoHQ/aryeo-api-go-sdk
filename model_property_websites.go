/*
 * Aryeo
 *
 * # Introduction The Aryeo API gives access to the Aryeo platform. You can use your favorite HTTP/REST library for interfacing with the Aryeo API, or you can use one of our SDKs. Our SDKs are procedurally generated and a great starting point for experimental testing. If there is an additional language or framework that you want to see supported, then please reach and out and make a contribution!  <p align=\"center\"> <a href=\"https://github.com/AryeoHQ/aryeo-api-dart-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/dart.svg\" alt=\"Dart\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-go-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/go.svg\" alt=\"Go\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-js-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/js.svg\" alt=\"Node JS\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-php-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/php.svg\" alt=\"PHP\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-ruby-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/ruby.svg\" alt=\"Ruby\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-rust-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/rust.svg\" alt=\"Rust\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-swift-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/swift.svg\" alt=\"Swift\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> </p>  **Note**: Some SDKs may require you to manually add the `Accept` header to all Aryeo API requests. If so, use the value `application/json`.  # Authentication To start using the Aryeo API, you will need to generate an API key from your group's developer settings. You can then authenticate to the Aryeo API by providing your key in the appropriate request header. Requests made without an API key will result in a `401 Unauthorized` error. 
 *
 * API version: 1.0.0
 * Contact: jarrod@aryeo.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aryeo

import (
	"encoding/json"
)

// PropertyWebsites Websites that displays information about a property.
type PropertyWebsites struct {
	// URL for website.
	BrandedUrl string `json:"branded_url"`
	// URL for website.
	UnbrandedUrl string `json:"unbranded_url"`
	// ID for property website
	Id int32 `json:"id"`
}

// NewPropertyWebsites instantiates a new PropertyWebsites object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyWebsites(brandedUrl string, unbrandedUrl string, id int32) *PropertyWebsites {
	this := PropertyWebsites{}
	this.BrandedUrl = brandedUrl
	this.UnbrandedUrl = unbrandedUrl
	this.Id = id
	return &this
}

// NewPropertyWebsitesWithDefaults instantiates a new PropertyWebsites object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyWebsitesWithDefaults() *PropertyWebsites {
	this := PropertyWebsites{}
	return &this
}

// GetBrandedUrl returns the BrandedUrl field value
func (o *PropertyWebsites) GetBrandedUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BrandedUrl
}

// GetBrandedUrlOk returns a tuple with the BrandedUrl field value
// and a boolean to check if the value has been set.
func (o *PropertyWebsites) GetBrandedUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BrandedUrl, true
}

// SetBrandedUrl sets field value
func (o *PropertyWebsites) SetBrandedUrl(v string) {
	o.BrandedUrl = v
}

// GetUnbrandedUrl returns the UnbrandedUrl field value
func (o *PropertyWebsites) GetUnbrandedUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnbrandedUrl
}

// GetUnbrandedUrlOk returns a tuple with the UnbrandedUrl field value
// and a boolean to check if the value has been set.
func (o *PropertyWebsites) GetUnbrandedUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UnbrandedUrl, true
}

// SetUnbrandedUrl sets field value
func (o *PropertyWebsites) SetUnbrandedUrl(v string) {
	o.UnbrandedUrl = v
}

// GetId returns the Id field value
func (o *PropertyWebsites) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PropertyWebsites) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PropertyWebsites) SetId(v int32) {
	o.Id = v
}

func (o PropertyWebsites) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["branded_url"] = o.BrandedUrl
	}
	if true {
		toSerialize["unbranded_url"] = o.UnbrandedUrl
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullablePropertyWebsites struct {
	value *PropertyWebsites
	isSet bool
}

func (v NullablePropertyWebsites) Get() *PropertyWebsites {
	return v.value
}

func (v *NullablePropertyWebsites) Set(val *PropertyWebsites) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyWebsites) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyWebsites) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyWebsites(val *PropertyWebsites) *NullablePropertyWebsites {
	return &NullablePropertyWebsites{value: val, isSet: true}
}

func (v NullablePropertyWebsites) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyWebsites) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


